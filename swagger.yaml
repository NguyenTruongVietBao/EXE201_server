openapi: 3.0.3
info:
  title: Server NodeJS API
  description: API cho hệ thống quản lý tài liệu và người dùng
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://exe201-server.onrender.com
    description: Production server

paths:
  # Authentication Endpoints
  /api/auth/register-customer:
    post:
      tags:
        - Authentication
      summary: Đăng ký tài khoản khách hàng
      description: Tạo tài khoản mới cho khách hàng
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterCustomerRequest'
      responses:
        '201':
          description: Đăng ký thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Dữ liệu đầu vào không hợp lệ
        '409':
          description: Email đã tồn tại

  /api/auth/register-seller:
    post:
      tags:
        - Authentication
      summary: Đăng ký tài khoản người bán
      description: Tạo tài khoản mới cho người bán
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterSellerRequest'
      responses:
        '201':
          description: Đăng ký thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Dữ liệu đầu vào không hợp lệ
        '409':
          description: Email đã tồn tại

  /api/auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Xác thực email
      description: Xác thực email bằng token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      responses:
        '200':
          description: Xác thực thành công
        '400':
          description: Token không hợp lệ hoặc đã hết hạn

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Đăng nhập
      description: Đăng nhập vào hệ thống
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Thông tin đăng nhập không chính xác

  # User Endpoints
  /api/users:
    get:
      tags:
        - Users
      summary: Lấy danh sách tất cả người dùng
      description: Trả về danh sách tất cả người dùng trong hệ thống
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Danh sách người dùng
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Không có quyền truy cập

  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Lấy thông tin người dùng theo ID
      description: Trả về thông tin chi tiết của một người dùng
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID của người dùng
          schema:
            type: string
      responses:
        '200':
          description: Thông tin người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy người dùng
        '401':
          description: Không có quyền truy cập

  /api/users/{id}/set-interests:
    put:
      tags:
        - Users
      summary: Cập nhật sở thích của người dùng
      description: Thiết lập danh sách sở thích cho người dùng
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID của người dùng
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetInterestsRequest'
      responses:
        '200':
          description: Cập nhật sở thích thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy người dùng
        '401':
          description: Không có quyền truy cập

  /api/users/{id}/update-profile:
    put:
      tags:
        - Users
      summary: Cập nhật thông tin cá nhân
      description: Cập nhật thông tin profile của người dùng
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID của người dùng
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy người dùng
        '401':
          description: Không có quyền truy cập

  # Interest Endpoints
  /api/interests:
    get:
      tags:
        - Interests
      summary: Lấy danh sách sở thích
      description: Trả về danh sách tất cả sở thích có sẵn
      responses:
        '200':
          description: Danh sách sở thích
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interest'

    post:
      tags:
        - Interests
      summary: Tạo sở thích mới
      description: Tạo một sở thích mới trong hệ thống
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInterestRequest'
      responses:
        '201':
          description: Tạo sở thích thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interest'
        '400':
          description: Dữ liệu đầu vào không hợp lệ
        '401':
          description: Không có quyền truy cập

components:
  schemas:
    # Authentication Schemas
    RegisterCustomerRequest:
      type: object
      required:
        - name
        - email
        - password
        - phone
      properties:
        name:
          type: string
          minLength: 3
          example: 'Nguyễn Văn A'
        email:
          type: string
          format: email
          example: 'user@example.com'
        password:
          type: string
          minLength: 6
          example: 'password123'
        phone:
          type: string
          pattern: '^[0-9]{10}$'
          example: '0987654321'

    RegisterSellerRequest:
      allOf:
        - $ref: '#/components/schemas/RegisterCustomerRequest'
        - type: object
          properties:
            billingInfo:
              type: string
              example: 'Thông tin thanh toán'
            bankName:
              type: string
              example: 'Vietcombank'
            bankAccountName:
              type: string
              example: 'Nguyễn Văn A'
            bankAccountNumber:
              type: string
              example: '1234567890'

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: 'user@example.com'
        password:
          type: string
          example: 'password123'

    VerifyEmailRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: 'abc123xyz'

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Đăng nhập thành công'
        token:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        user:
          $ref: '#/components/schemas/User'

    # User Schemas
    User:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f7d1f1b2c8b5f8e7a123'
        name:
          type: string
          example: 'Nguyễn Văn A'
        email:
          type: string
          format: email
          example: 'user@example.com'
        avatar:
          type: string
          example: 'https://api.dicebear.com/9.x/initials/svg?seed=default'
        role:
          type: string
          enum: [CUSTOMER, SELLER, ADMIN, MANAGER]
          example: 'CUSTOMER'
        phone:
          type: string
          example: '0987654321'
        isVerified:
          type: boolean
          example: true
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00.000Z'

    SetInterestsRequest:
      type: object
      required:
        - interests
      properties:
        interests:
          type: array
          items:
            type: string
          example: ['60d5f7d1f1b2c8b5f8e7a123', '60d5f7d1f1b2c8b5f8e7a124']

    UpdateProfileRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          example: 'Nguyễn Văn B'
        phone:
          type: string
          pattern: '^[0-9]{10}$'
          example: '0987654321'
        avatar:
          type: string
          example: 'https://example.com/avatar.jpg'

    # Interest Schemas
    Interest:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f7d1f1b2c8b5f8e7a123'
        name:
          type: string
          example: 'Công nghệ'
        emoji:
          type: string
          example: '💻'

    CreateInterestRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 'Công nghệ'
        emoji:
          type: string
          example: '💻'

    # Document Schema
    Document:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f7d1f1b2c8b5f8e7a123'
        title:
          type: string
          example: 'Tài liệu học tập'
        description:
          type: string
          example: 'Mô tả chi tiết về tài liệu'
        category:
          type: string
          example: 'Giáo dục'
        price:
          type: number
          minimum: 0
          example: 100000
        discount:
          type: number
          minimum: 0
          maximum: 100
          example: 10
        imageUrl:
          type: array
          items:
            type: string
          example:
            ['https://example.com/image1.jpg', 'https://example.com/image2.jpg']
        documentUrl:
          type: array
          items:
            type: string
          example:
            ['https://example.com/doc1.pdf', 'https://example.com/doc2.pdf']
        videoUrl:
          type: array
          items:
            type: string
          example: ['https://example.com/video1.mp4']
        isPublic:
          type: boolean
          example: true
        feedback:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
                example: '60d5f7d1f1b2c8b5f8e7a123'
              comment:
                type: string
                example: 'Tài liệu rất hay'
              rating:
                type: number
                minimum: 1
                maximum: 5
                example: 5
              createdAt:
                type: string
                format: date-time
                example: '2023-01-01T00:00:00.000Z'
        interest:
          type: array
          items:
            $ref: '#/components/schemas/Interest'
        author:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00.000Z'

    # Error Schemas
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: 'Lỗi xảy ra'
        error:
          type: string
          example: 'Chi tiết lỗi'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Authentication
    description: Các API liên quan đến xác thực
  - name: Users
    description: Các API quản lý người dùng
  - name: Interests
    description: Các API quản lý sở thích
